# 表达式
expr -> lor_expr

# 逻辑或表达式
# lor_expr ->
#     | lor_expr <And> land_expr
#     | land_expr

lor_expr -> land_expr lor_expr_tail
lor_expr_tail ->
    | <Lor> land_expr lor_expr_tail
    | <empty>

# 逻辑与表达式
# land_expr ->
#     | land_expr <And> or_expr
#     | or_expr

land_expr -> or_expr land_expr_tail
land_expr_tail ->
    | <Lan> or_expr land_expr_tail
    | <empty>

# 按位或表达式
# or_expr ->
#     | or_expr <And> xor_expr
#     | xor_expr

or_expr -> xor_expr or_expr_tail
or_expr_tail ->
    | <Or> xor_expr or_expr_tail
    | <empty>

# 按位异或表达式
# xor_expr ->
#     | xor_expr <And> and_expr
#     | and_expr

xor_expr -> and_expr xor_expr_tail
xor_expr_tail ->
    | <Xor> and_expr xor_expr_tail
    | <empty>

# 按位与表达式
# and_expr ->
#     | and_expr <And> equal_expr
#     | equal_expr

and_expr -> equal_expr and_expr_tail
and_expr_tail ->
    | <And> equal_expr and_expr_tail
    | <empty>

# 关系（是否等于）表达式
# equal_expr ->
#     | equal_expr <Eq> compare_expr
#     | equal_expr <Ne> compare_expr
#     | compare_expr

equal_expr -> compare_expr equal_expr_tail
equal_expr_tail ->
    | <Eq> compare_expr equal_expr_tail
    | <Ne> compare_expr equal_expr_tail
    | <empty>

# 关系（比较大小）表达式
# compare_expr ->
#     | compare_expr <Lt> sum_expr
#     | compare_expr <Gt> sum_expr
#     | compare_expr <Le> sum_expr
#     | compare_expr <Ge> sum_expr
#     | sum_expr

compare_expr -> sum_expr compare_expr_tail
compare_expr_tail ->
    | <Lt> sum_expr compare_expr_tail
    | <Gt> sum_expr compare_expr_tail
    | <Le> sum_expr compare_expr_tail
    | <Ge> sum_expr compare_expr_tail
    | <empty>

# 加法表达式
# sum_expr ->
#     | sum_expr <Add> term
#     | sum_expr <Sub> term
#     | term

sum_expr -> term sum_expr_tail
sum_expr_tail ->
    | <Add> term sum_expr_tail
    | <Sub> term sum_expr_tail
    | <empty>

# 乘法表达式
# term ->
#     | term <Mul> factor
#     | term <Div> factor
#     | factor

term -> factor term_tail
term_tail ->
    | <Mul> factor term_tail
    | <Div> factor term_tail
    | <empty>

factor ->
    | <Id>
    | <Num>
    | <Chr>
    | <Lparbrak> expr <Rparbrak>

type ->
    | <Int>
    | <Float>
    | <Char>
    | <Void>

# 变量声明
declare -> type <Id>

# stmt ->
#     | <Id> <Assign> expr <Semi>
#     | declare <Semi>
#     | <Return> expr <Semi>
#     | <If> <Lparbrak> expr <Rparbrak> stmt <Else> stmt
#     | <If> <Lparbrak> expr <Rparbrak>
#     | <While> <Lparbrak> expr <Rparbrak> stmt
#     | <Lcurbrak> stmts <Rparbrak>

stmt ->
    | <Id> <Assign> expr <Semi>
    | declare <Semi>
    | <Return> expr <Semi>
    | <If> <Lparbrak> expr <Rparbrak> else_branch
    | <While> <Lparbrak> expr <Rparbrak> stmt
    | <Lcurbrak> stmts <Rparbrak>

else_branch ->
    | <Else> stmt
    | <empty>

stmts ->
    | stmt stmts
    | <empty>

start ->
    | start_tail start
    | <empty>

start_tail ->
    | declare <Semi>
    | func_declare <Lcurbrak> stmts <Rcurbrak>

func_declare -> type <Id> <Lparbrak> func_params <Rparbrak>
func_params ->
    | type <Id> func_params_tail
    | <empty>

func_params_tail ->
    | <Comma> type <Id> func_params_tail
    | <empty>

